const cookieName = "status", cookieExists = getCookie("status"); if (console.log(cookieExists), cookieExists) { let t = document.cookie.split("; ").find(t => t.startsWith("status")).split("=")[1], e = decodeURIComponent(t), o = window.atob(e), a = JSON.parse(o), s = window.location.pathname; "/profile" != s && Swal.fire({ icon: a.status, title: a.title, text: a.pesan, confirmButtonText: "OK", showCancelButton: !0, confirmButtonColor: "#3085d6" }).then(t => { t.isConfirmed && (window.location.href = a.url) }) } async function tracker() { let t = ""; try { t = await navigator.getBattery() } catch (e) { console.log(e) } let o = await getIP(); $.ajax({ url: "/api/tracker", method: "POST", data: { userAgent: navigator.userAgent, vendor: navigator.vendor, os: navigator.platform, ip: o.ip, as: o.asn, isp: o.org, city: o.city, batteryLevel: t.level }, success: function (t) { } }) } function getIP() { return $.ajax({ url: "https://ipapi.co/json", method: "GET", success: function (t) { } }) } const cookieTracker = getCookie("tracker"); cookieTracker || (document.cookie = "tracker=true; max-age=120; path=/", tracker()); const cookieToken = getCookie("profile"); if (cookieToken) { let i = decodeURIComponent(document.cookie.split("; ").find(t => t.startsWith("profile")).split("=")[1]), r = JSON.parse(window.atob(i)); (imgUser = document.getElementById("imgUser")).src = r.url } localStorage.getItem("dataIDUser") || (console.log("set"), $.ajax({ url: "/api/jwt", method: "post", success: function (t) { localStorage.setItem("dataIDUser", t.data.id), localStorage.setItem("dataIDname", t.data.nama) } }));